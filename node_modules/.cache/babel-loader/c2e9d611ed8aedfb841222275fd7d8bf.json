{"ast":null,"code":"var _jsxFileName = \"/Users/songjuhyeong/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165/client/src/components/Diary/DiaryListView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiaryListView() {\n  _s();\n  const [diaries, setDiaries] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      history.push('/login');\n      return;\n    }\n    const fetchDiaries = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/diary', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDiaries(response.data);\n      } catch (error) {\n        console.error('일기 목록을 불러오는데 실패했습니다:', error);\n      }\n    };\n    fetchDiaries();\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diary-list-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC6B0\\uB9AC \\uC544\\uC774\\uC758 \\uC18C\\uC911\\uD55C \\uC21C\\uAC04\\uB4E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diary-grid\",\n      children: diaries.map(diary => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diary-card-image\",\n          children: diary.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5001${diary.imageUrl}`,\n            alt: \"\\uC77C\\uAE30 \\uC774\\uBBF8\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diary-card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: new Date(diary.createdAt).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: diary.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: diary.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, diary._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(DiaryListView, \"GOZPbs3g2E6NO4pvQMWlUdmLLb4=\", false, function () {\n  return [useHistory];\n});\n_c = DiaryListView;\nexport default DiaryListView;\nvar _c;\n$RefreshReg$(_c, \"DiaryListView\");","map":{"version":3,"names":["React","useState","useEffect","axios","useHistory","jsxDEV","_jsxDEV","DiaryListView","_s","diaries","setDiaries","history","token","localStorage","getItem","push","fetchDiaries","response","get","headers","Authorization","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","diary","imageUrl","src","alt","Date","createdAt","toLocaleDateString","title","content","_id","_c","$RefreshReg$"],"sources":["/Users/songjuhyeong/Desktop/무제 폴더/client/src/components/Diary/DiaryListView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nfunction DiaryListView() {\n  const [diaries, setDiaries] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      history.push('/login');\n      return;\n    }\n\n    const fetchDiaries = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/diary', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDiaries(response.data);\n      } catch (error) {\n        console.error('일기 목록을 불러오는데 실패했습니다:', error);\n      }\n    };\n\n    fetchDiaries();\n  }, [history]);\n\n  return (\n    <div className=\"diary-list-view\">\n      <h2>우리 아이의 소중한 순간들</h2>\n      <div className=\"diary-grid\">\n        {diaries.map((diary) => (\n          <div key={diary._id} className=\"diary-card\">\n            <div className=\"diary-card-image\">\n              {diary.imageUrl && (\n                <img src={`http://localhost:5001${diary.imageUrl}`} alt=\"일기 이미지\" />\n              )}\n            </div>\n            <div className=\"diary-card-content\">\n              <h3>{new Date(diary.createdAt).toLocaleDateString()}</h3>\n              <h4>{diary.title}</h4>\n              <p>{diary.content}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DiaryListView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}